# Generated by Django 3.2.19 on 2024-08-09 01:11

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('productspecification', '0005_pastingmaster'),
    ]

    operations = [
        migrations.CreateModel(
            name='Extracostmaster',
            fields=[
                ('costid', models.CharField(db_column='CostID', max_length=10, primary_key=True, serialize=False)),
                ('pname', models.CharField(db_column='PName', max_length=45)),
                ('costtype', models.CharField(db_column='CostType', max_length=45)),
                ('varpercentage', models.FloatField(db_column='VarPercentage')),
                ('calcretria', models.CharField(db_column='CalCretria', max_length=60)),
                ('cprocessno', models.FloatField(db_column='CProcessNo')),
                ('slabcretria', models.CharField(db_column='SlabCretria', max_length=45)),
                ('unit', models.CharField(db_column='Unit', max_length=45)),
                ('mincost', models.FloatField(db_column='MinCost')),
                ('isactive', models.PositiveIntegerField(db_column='IsActive')),
                ('costcretria', models.CharField(db_column='CostCretria', max_length=45)),
                ('mreadywastageper', models.FloatField(db_column='MReadyWastagePer')),
                ('runningwastageper', models.FloatField(db_column='RunningWastagePer')),
                ('inputtip', models.CharField(db_column='InputTip', max_length=45)),
                ('isfiltercondition', models.PositiveIntegerField(db_column='IsFilterCondition')),
                ('callevel', models.PositiveIntegerField(db_column='CalLevel')),
                ('comp1', models.PositiveIntegerField(db_column='Comp1')),
                ('comp2', models.PositiveIntegerField(db_column='Comp2')),
                ('comp3', models.PositiveIntegerField(db_column='Comp3')),
                ('comp4', models.PositiveIntegerField(db_column='Comp4')),
                ('comp5', models.PositiveIntegerField(db_column='Comp5')),
                ('comp6', models.PositiveIntegerField(db_column='Comp6')),
                ('comp7', models.PositiveIntegerField(db_column='Comp7')),
                ('comp8', models.PositiveIntegerField(db_column='Comp8')),
                ('fcvariablename', models.PositiveIntegerField(db_column='FCVariableName')),
                ('fccondtion', models.PositiveIntegerField(db_column='FCCondtion')),
                ('fcvalue', models.FloatField(db_column='FCValue')),
                ('actionname', models.PositiveIntegerField(db_column='ActionName')),
                ('actionvariable', models.PositiveIntegerField(db_column='ActionVariable')),
                ('inputuom', models.CharField(db_column='InputUOM', max_length=20)),
                ('outputuom', models.CharField(db_column='OutputUOM', max_length=20)),
                ('mispname', models.CharField(db_column='MISPName', max_length=20)),
                ('alwaysselectpe', models.CharField(blank=True, db_column='AlwaysSelectPE', max_length=1, null=True)),
                ('alwaysselectce', models.CharField(blank=True, db_column='AlwaysSelectCE', max_length=1, null=True)),
                ('makerdysheet', models.FloatField(db_column='MakeRdySheet')),
                ('wastagerunning', models.FloatField(db_column='WastageRunning')),
                ('minrate', models.FloatField(blank=True, db_column='MinRate', null=True)),
                ('pruniqueid', models.IntegerField(blank=True, db_column='PrUniqueID', null=True)),
                ('bpc', models.CharField(db_column='BPC', max_length=1)),
                ('processdescription', models.CharField(db_column='ProcessDescription', max_length=200)),
            ],
            options={
                'db_table': 'extracostmaster',
                'managed': False,
            },
        ),
    ]
