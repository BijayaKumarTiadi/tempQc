# Generated by Django 3.2.19 on 2024-07-30 17:13

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CoatingMaster',
            fields=[
                ('coatingid', models.CharField(db_column='CoatingID', max_length=10, primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=100, null=True)),
                ('isactive', models.PositiveIntegerField(blank=True, db_column='IsActive', null=True)),
                ('cgsm', models.FloatField(db_column='CGSM')),
                ('fullcoatingunit', models.CharField(db_column='FullCoatingUnit', max_length=45)),
                ('fullrate', models.FloatField(db_column='FullRate')),
                ('fullratemin', models.FloatField(db_column='FullRateMin')),
                ('fullmincharges', models.FloatField(db_column='FullMinCharges')),
                ('spotcoatingunit', models.CharField(db_column='SpotCoatingUnit', max_length=45)),
                ('spotrate', models.FloatField(db_column='SpotRate')),
                ('spotratemin', models.FloatField(db_column='SpotRateMin')),
                ('spotratetsh', models.FloatField(db_column='SpotRateTSh')),
                ('spotratetshmin', models.FloatField(db_column='SpotRateTShMin')),
                ('spotmincharges', models.FloatField(db_column='SpotMinCharges')),
                ('minratepersh', models.FloatField(db_column='MinRatePerSh')),
                ('roundoffshby', models.FloatField(db_column='RoundOffShBy')),
                ('mreadywastsh', models.FloatField(db_column='MReadyWastSh')),
                ('runwastper', models.FloatField(db_column='RunWastPer')),
                ('catid', models.CharField(db_column='CatID', max_length=10)),
                ('machineid', models.CharField(db_column='MachineId', max_length=10)),
                ('is_uv_coating', models.IntegerField(blank=True, db_column='Is_uv_coating', null=True)),
                ('extra_plates', models.IntegerField(blank=True, db_column='Extra_Plates', null=True)),
            ],
            options={
                'db_table': 'Coating_Master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EstJobcomplexity',
            fields=[
                ('id', models.CharField(db_column='ID', max_length=10, primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=40)),
                ('remark', models.CharField(blank=True, db_column='Remark', max_length=100, null=True)),
                ('isactive', models.IntegerField(blank=True, db_column='IsActive', null=True)),
                ('prid', models.CharField(db_column='PrID', max_length=50)),
                ('isdefault', models.PositiveIntegerField(db_column='IsDefault')),
                ('prwastage_per', models.FloatField(db_column='PrWastage_per')),
            ],
            options={
                'db_table': 'est_jobcomplexity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Flutemaster',
            fields=[
                ('corrfluteid', models.CharField(db_column='CorrFluteId', max_length=10, primary_key=True, serialize=False)),
                ('flutetype', models.CharField(blank=True, db_column='FluteType', max_length=50, null=True)),
                ('extraconsumption', models.IntegerField(blank=True, db_column='ExtraConsumption', null=True)),
                ('declinebf', models.IntegerField(blank=True, db_column='DeclineBF', null=True)),
                ('avgthickness', models.FloatField(blank=True, db_column='AvgThickness', null=True)),
                ('isactive', models.PositiveIntegerField(db_column='IsActive')),
                ('flutefactor', models.FloatField(db_column='FluteFactor')),
                ('minsheetarea', models.FloatField(db_column='MinSheetArea')),
                ('bbadherate', models.FloatField(db_column='BBAdheRate')),
                ('bbpastinglabour', models.FloatField(db_column='BBPastingLabour')),
                ('ply3_1', models.FloatField(db_column='Ply3_1')),
                ('ply3_2', models.FloatField(db_column='Ply3_2')),
                ('ply3_3', models.FloatField(db_column='Ply3_3')),
                ('ply5_1', models.FloatField(db_column='Ply5_1')),
                ('ply5_2', models.FloatField(db_column='Ply5_2')),
                ('ply5_3', models.FloatField(db_column='Ply5_3')),
                ('ply7_1', models.FloatField(db_column='Ply7_1')),
                ('ply7_2', models.FloatField(db_column='Ply7_2')),
                ('ply7_3', models.FloatField(db_column='Ply7_3')),
                ('plyb_1', models.FloatField(db_column='PlyB_1')),
                ('plyb_2', models.FloatField(db_column='PlyB_2')),
                ('plyb_3', models.FloatField(db_column='PlyB_3')),
                ('makerdysheet', models.FloatField(db_column='MakeRdySheet')),
                ('wastagerunning', models.FloatField(db_column='WastageRunning')),
            ],
            options={
                'db_table': 'flutemaster',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Foilmaster',
            fields=[
                ('foilid', models.CharField(db_column='FoilID', max_length=10, primary_key=True, serialize=False)),
                ('foiltype', models.CharField(blank=True, db_column='FoilType', max_length=50, null=True)),
                ('minarea', models.SmallIntegerField(blank=True, db_column='MinArea', null=True)),
                ('rolllength', models.FloatField(db_column='RollLength')),
                ('rollwidth', models.FloatField(db_column='RollWidth')),
            ],
            options={
                'db_table': 'foilmaster',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ItemEmbosetypeMaster',
            fields=[
                ('typeid', models.AutoField(db_column='TypeID', primary_key=True, serialize=False)),
                ('typedescription', models.CharField(db_column='TypeDescription', max_length=100)),
                ('purpose', models.CharField(db_column='Purpose', max_length=1)),
                ('ratepersqcm', models.FloatField(db_column='RatePerSqCm')),
                ('minarea', models.FloatField(db_column='MinArea')),
                ('minamount', models.FloatField(db_column='MinAmount')),
                ('blocklife', models.FloatField(db_column='BlockLife')),
                ('isactive', models.PositiveIntegerField(db_column='IsActive')),
            ],
            options={
                'db_table': 'item_embosetype_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Lammaster',
            fields=[
                ('lamid', models.CharField(db_column='LamID', max_length=10, primary_key=True, serialize=False)),
                ('filmtype', models.CharField(blank=True, db_column='FilmType', max_length=50, null=True)),
                ('micron', models.SmallIntegerField(blank=True, db_column='Micron', null=True)),
                ('gravity', models.FloatField(blank=True, db_column='Gravity', null=True)),
            ],
            options={
                'db_table': 'lammaster',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Windowpatchtype',
            fields=[
                ('id', models.CharField(db_column='ID', max_length=10, primary_key=True, serialize=False)),
                ('patch_type', models.CharField(db_column='Patch_Type', max_length=50)),
                ('isactive', models.PositiveIntegerField(db_column='IsActive')),
                ('isdefault', models.IntegerField(blank=True, db_column='IsDefault', null=True)),
            ],
            options={
                'db_table': 'windowpatchtype',
                'managed': False,
            },
        ),
    ]
