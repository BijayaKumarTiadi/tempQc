# Generated by Django 3.2.19 on 2024-07-30 15:17

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('estimation', '0002_estprocessinputdetail_frontendresponse_papermasterfull'),
    ]

    operations = [
        migrations.CreateModel(
            name='Companymaster',
            fields=[
                ('companyid', models.CharField(db_column='CompanyId', max_length=10, primary_key=True, serialize=False)),
                ('companyname', models.CharField(blank=True, db_column='CompanyName', max_length=100, null=True)),
                ('shortname', models.CharField(blank=True, db_column='ShortName', max_length=4, null=True)),
                ('exciseper', models.FloatField(blank=True, db_column='ExcisePer', null=True)),
                ('localtaxper', models.FloatField(blank=True, db_column='LocalTaxPer', null=True)),
                ('carryingandforper', models.FloatField(blank=True, db_column='CarryingAndForPer', null=True)),
                ('packagingper', models.FloatField(blank=True, db_column='PackagingPer', null=True)),
                ('catid', models.CharField(blank=True, db_column='CatID', max_length=10, null=True)),
                ('isactive', models.PositiveIntegerField(db_column='IsActive')),
                ('creditterm', models.CharField(blank=True, db_column='CreditTerm', max_length=50, null=True)),
                ('cfminrate', models.FloatField(blank=True, db_column='CFMinRate', null=True)),
                ('cfminqty', models.FloatField(blank=True, db_column='CFMinQty', null=True)),
                ('cfkg', models.FloatField(blank=True, db_column='CFKG', null=True)),
                ('creditlimit', models.FloatField(blank=True, db_column='CreditLimit', null=True)),
                ('repid', models.CharField(blank=True, db_column='RepID', max_length=10, null=True)),
                ('weburl', models.CharField(blank=True, db_column='WebURL', max_length=50, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('isosvendor', models.PositiveIntegerField(db_column='IsOSVendor')),
                ('mantaininventory', models.PositiveIntegerField(db_column='MantainInventory')),
                ('packtemplate', models.CharField(db_column='PackTemplate', max_length=10)),
                ('commtemplate', models.CharField(db_column='CommTemplate', max_length=10)),
                ('eccno', models.CharField(db_column='ECCNo', max_length=45)),
                ('tin', models.CharField(db_column='TIN', max_length=45)),
                ('cstno', models.CharField(db_column='CSTNo', max_length=45)),
                ('payid', models.CharField(blank=True, db_column='PayID', max_length=10, null=True)),
                ('auid', models.CharField(blank=True, db_column='AUID', max_length=10, null=True)),
                ('adatetime', models.DateTimeField(blank=True, db_column='ADateTime', null=True)),
                ('muid', models.CharField(db_column='MUID', max_length=10)),
                ('mdatetime', models.CharField(db_column='MDateTime', max_length=50)),
                ('lstno', models.CharField(db_column='LSTNo', max_length=45)),
                ('shortname2', models.CharField(db_column='ShortName2', max_length=60)),
                ('exciselicno', models.CharField(db_column='ExciseLicNo', max_length=45)),
                ('collectrate', models.CharField(db_column='Collectrate', max_length=45)),
                ('rangename', models.CharField(db_column='RangeName', max_length=45)),
                ('division', models.CharField(db_column='Division', max_length=45)),
                ('rangeadd', models.CharField(db_column='RangeAdd', max_length=250)),
                ('tanno', models.CharField(db_column='TANNo', max_length=45)),
                ('divadd', models.CharField(db_column='DivAdd', max_length=45)),
                ('clientstatus', models.CharField(db_column='ClientStatus', max_length=1)),
                ('clientgroup', models.CharField(db_column='ClientGroup', max_length=1)),
                ('ismother', models.IntegerField(db_column='Ismother')),
                ('motherid', models.CharField(db_column='Motherid', max_length=10)),
                ('lbtno', models.CharField(db_column='LBTNo', max_length=50)),
                ('segment', models.CharField(blank=True, max_length=50, null=True)),
                ('delaytime', models.IntegerField(db_column='DelayTime')),
                ('cinno', models.CharField(db_column='CINNo', max_length=50)),
                ('plusmiusorderaccptance', models.FloatField(db_column='Plusmiusorderaccptance')),
                ('onhold', models.IntegerField(db_column='OnHold')),
                ('holdreason', models.CharField(db_column='HoldReason', max_length=100)),
                ('gstin', models.CharField(db_column='GSTIN', max_length=15)),
                ('labourprofitper', models.FloatField(db_column='LabourProfitPer')),
                ('type_dom_exp', models.CharField(db_column='Type_Dom_Exp', max_length=50)),
                ('transportationper', models.FloatField(db_column='Transportationper')),
                ('clientkey', models.CharField(db_column='Clientkey', max_length=8)),
                ('freightbyus', models.IntegerField(db_column='Freightbyus')),
                ('iswastage', models.IntegerField(db_column='IsWastage')),
                ('poselection', models.IntegerField(db_column='POSelection')),
            ],
            options={
                'db_table': 'companymaster',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Currencymaster',
            fields=[
                ('currencyid', models.CharField(db_column='CurrencyID', max_length=10, primary_key=True, serialize=False)),
                ('currencyname', models.CharField(blank=True, db_column='CurrencyName', max_length=50, null=True)),
                ('currencysymbol', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='CurrencySymbol', max_length=20, null=True)),
                ('isdefault', models.PositiveIntegerField(db_column='IsDefault')),
                ('hexacode', models.CharField(db_column='HexaCode', max_length=6)),
            ],
            options={
                'db_table': 'currencymaster',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Employeemaster',
            fields=[
                ('empid', models.CharField(db_column='EmpId', max_length=10, primary_key=True, serialize=False)),
                ('empname', models.CharField(blank=True, db_column='EmpName', max_length=50, null=True)),
                ('post', models.CharField(blank=True, db_column='Post', max_length=50, null=True)),
                ('dept', models.CharField(blank=True, db_column='Dept', max_length=50, null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=100, null=True)),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=50, null=True)),
                ('joindate', models.DateTimeField(blank=True, db_column='JoinDate', null=True)),
                ('isactive', models.PositiveIntegerField(db_column='IsActive')),
            ],
            options={
                'db_table': 'employeemaster',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EstAdvanceInputDetail',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('unique_name', models.CharField(db_column='Unique_Name', max_length=20)),
                ('input_label_name', models.CharField(max_length=30)),
                ('input_type', models.CharField(blank=True, max_length=30, null=True)),
                ('input_data_type', models.CharField(blank=True, max_length=30, null=True)),
                ('input_default_value', models.CharField(blank=True, max_length=10, null=True)),
                ('seqno', models.IntegerField(blank=True, db_column='SeqNo', null=True)),
                ('isactive', models.IntegerField(blank=True, db_column='IsActive', null=True)),
            ],
            options={
                'db_table': 'est_advance_input_detail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EstBbp',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('quoteid', models.IntegerField(db_column='QuoteID')),
                ('bbp_board', models.CharField(blank=True, db_column='BBP_Board', max_length=10, null=True)),
                ('bbp_gsm', models.IntegerField(db_column='BBP_GSM')),
            ],
            options={
                'db_table': 'est_BBP',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EstBoard',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('quoteid', models.IntegerField(db_column='QuoteID')),
                ('boardid', models.CharField(blank=True, db_column='BoardID', max_length=10, null=True)),
                ('board_type', models.CharField(blank=True, db_column='Board_Type', max_length=10, null=True)),
                ('board_gsm', models.CharField(blank=True, db_column='Board_GSM', max_length=10, null=True)),
                ('board_menufac', models.CharField(blank=True, db_column='board_menufac', max_length=50, null=True)),
            ],
            options={
                'db_table': 'Est_Board',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EstCoating',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('quoteid', models.IntegerField(db_column='QuoteID')),
                ('fc_type', models.CharField(blank=True, db_column='FC_Type', max_length=10, null=True)),
                ('fc_kind', models.CharField(db_column='FC_Kind', max_length=10)),
                ('fc_area', models.FloatField(db_column='FC_Area')),
                ('fc_fb', models.CharField(db_column='FB', max_length=10)),
            ],
            options={
                'db_table': 'Est_coating',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EstCorrugation',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('quoteid', models.IntegerField(db_column='QuoteID')),
                ('fm_tot_ply', models.IntegerField(blank=True, db_column='FM_Tot_Ply', null=True)),
                ('fm_flute', models.CharField(db_column='FM_Flute', max_length=10)),
                ('fm_kraft_det', models.CharField(db_column='FM_KRAFT_Det', max_length=10)),
                ('fm_pins', models.CharField(db_column='FM_Pins', max_length=2)),
            ],
            options={
                'db_table': 'est_corrugation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EstDimensions',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('quoteid', models.IntegerField(db_column='QuoteID')),
                ('dimension_id', models.CharField(db_column='Dimension_ID', max_length=10)),
                ('dimension_value', models.FloatField(db_column='Dimension_value')),
            ],
            options={
                'db_table': 'Est_Dimensions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EstEmbossing',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('quoteid', models.IntegerField(db_column='QuoteID')),
                ('em_type', models.CharField(blank=True, db_column='EM_Type', max_length=10, null=True)),
                ('em_block_l', models.FloatField(db_column='EM_BLOCK_L')),
                ('em_block_b', models.FloatField(db_column='EM_BLOCK_B')),
                ('fb', models.CharField(db_column='FB', max_length=10)),
            ],
            options={
                'db_table': 'est_embossing',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EstFoiling',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('quoteid', models.IntegerField(db_column='QuoteID')),
                ('ff_film', models.CharField(blank=True, db_column='FF_Film', max_length=10, null=True)),
                ('ff_l', models.FloatField(db_column='FF_L')),
                ('ff_b', models.FloatField(db_column='FF_B')),
                ('ff_fb', models.CharField(db_column='FB', max_length=10)),
            ],
            options={
                'db_table': 'Est_Foiling',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EstFolding',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('quoteid', models.IntegerField(db_column='QuoteID')),
                ('fo_cross_fold', models.IntegerField(blank=True, db_column='FO_Cross_Fold', null=True)),
                ('fo_verticle_fold', models.IntegerField(db_column='FO_Verticle_Fold')),
                ('fo_gum_tape', models.CharField(db_column='FO_GUM_Tape', max_length=10)),
            ],
            options={
                'db_table': 'est_folding',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EstGrainDirection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grain_direction', models.CharField(max_length=1)),
                ('quoteid', models.IntegerField(db_column='QuoteID')),
            ],
            options={
                'db_table': 'est_grain_direction',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EstLamination',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('quoteid', models.IntegerField(db_column='QuoteID')),
                ('fl_film', models.CharField(blank=True, db_column='FL_Film', max_length=10, null=True)),
                ('fl_type', models.CharField(db_column='FL_Type', max_length=10)),
                ('fl_strips', models.IntegerField(db_column='FL_Strips')),
                ('fl_fb', models.CharField(db_column='FB', max_length=10)),
            ],
            options={
                'db_table': 'Est_lamination',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EstLinerBag',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('quoteid', models.IntegerField(db_column='QuoteID')),
                ('type_113', models.CharField(blank=True, db_column='Type_113', max_length=10, null=True)),
                ('l_113', models.FloatField(db_column='L_113')),
                ('b_113', models.FloatField(db_column='B_113')),
            ],
            options={
                'db_table': 'est_liner_bag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EstMetpetp',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('quoteid', models.IntegerField(db_column='QuoteID')),
                ('mp_ft', models.CharField(blank=True, db_column='MP_FT', max_length=10, null=True)),
            ],
            options={
                'db_table': 'est_metpetp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EstNewQuote',
            fields=[
                ('quoteid', models.AutoField(db_column='QuoteID', primary_key=True, serialize=False)),
                ('quotedate', models.CharField(db_column='QuoteDate', max_length=10)),
                ('quote_no', models.CharField(db_column='Quote_No', max_length=30)),
                ('icompanyid', models.CharField(db_column='ICompanyID', max_length=10)),
                ('clientid', models.CharField(blank=True, db_column='ClientID', max_length=10, null=True)),
                ('client_name', models.CharField(blank=True, db_column='Client_Name', max_length=100, null=True)),
                ('product_name', models.CharField(blank=True, db_column='Product_Name', max_length=100, null=True)),
                ('product_code', models.CharField(blank=True, db_column='Product_Code', max_length=20, null=True)),
                ('carton_type_id', models.IntegerField(blank=True, db_column='Carton_Type_ID', null=True)),
                ('auid', models.CharField(db_column='AUID', max_length=10)),
                ('adatetime', models.DateTimeField(auto_now_add=True, db_column='ADateTime')),
                ('muid', models.CharField(blank=True, db_column='MUID', max_length=10, null=True)),
                ('mdatetime', models.DateTimeField(blank=True, db_column='MDateTime', null=True)),
                ('remarks', models.CharField(blank=True, db_column='Remarks', max_length=200, null=True)),
                ('orderstatus', models.CharField(blank=True, db_column='OrderStatus', max_length=20, null=True)),
                ('isactive', models.IntegerField(blank=True, db_column='IsActive', null=True)),
                ('finalby', models.CharField(blank=True, db_column='FinalBy', max_length=10, null=True)),
                ('enqno', models.CharField(blank=True, db_column='EnqNo', max_length=10, null=True)),
                ('docnotion', models.IntegerField(blank=True, db_column='DocNotion', null=True)),
                ('estnotion', models.CharField(blank=True, db_column='EstNotion', max_length=50, null=True)),
                ('finaldate', models.DateTimeField(blank=True, db_column='FinalDate', null=True)),
                ('repid', models.CharField(blank=True, db_column='RepID', max_length=10, null=True)),
                ('impexpstatus', models.CharField(blank=True, db_column='ImpExpStatus', max_length=2, null=True)),
                ('revquoteno', models.IntegerField(blank=True, db_column='RevQuoteNo', null=True)),
                ('grainstyle', models.IntegerField(blank=True, db_column='GrainStyle', null=True)),
                ('locationid', models.CharField(blank=True, db_column='LocationID', max_length=10, null=True)),
                ('currencyid', models.CharField(blank=True, db_column='CurrencyID', max_length=10, null=True)),
                ('currency_factctor', models.FloatField(blank=True, db_column='Currency_Factctor', null=True)),
                ('currency_curramt', models.FloatField(blank=True, db_column='Currency_CurrAmt', null=True)),
                ('clientcategoryid', models.CharField(blank=True, db_column='ClientCategoryID', max_length=10, null=True)),
                ('calculatedrate', models.FloatField(blank=True, db_column='CalculatedRate', null=True)),
                ('quoterate', models.FloatField(blank=True, db_column='QuoteRate', null=True)),
                ('finalrate', models.FloatField(blank=True, db_column='FinalRate', null=True)),
                ('fpid', models.CharField(blank=True, db_column='FPID', max_length=10, null=True)),
            ],
            options={
                'db_table': 'Est_New_quote',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EstOtherProcess',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('quoteid', models.IntegerField(db_column='QuoteID')),
                ('op_process', models.CharField(blank=True, db_column='OP_Process', max_length=10, null=True)),
                ('op_qty', models.FloatField(db_column='OP_Qty')),
                ('op_rem', models.CharField(db_column='OP_Rem', max_length=100)),
            ],
            options={
                'db_table': 'est_Other_process',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EstOtp',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('quoteid', models.IntegerField(db_column='QuoteID')),
                ('op_process_id', models.CharField(blank=True, db_column='OP_Process_ID', max_length=10, null=True)),
                ('op_rate', models.FloatField(db_column='OP_Rate')),
                ('op_rem', models.CharField(db_column='OP_Rem', max_length=100)),
            ],
            options={
                'db_table': 'est_OTP',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EstPasting',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('quoteid', models.IntegerField(db_column='QuoteID')),
                ('pa_type', models.CharField(blank=True, db_column='Pa_Type', max_length=10, null=True)),
            ],
            options={
                'db_table': 'est_pasting',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EstPrint',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('quoteid', models.IntegerField(db_column='QuoteID')),
                ('pr_complex', models.CharField(blank=True, db_column='Pr_Complex', max_length=10, null=True)),
                ('pr_fcol', models.IntegerField(db_column='Pr_FCol')),
                ('pr_fb', models.CharField(db_column='Pr_FB', max_length=10)),
                ('pr_add_pl', models.IntegerField(db_column='Pr_Add_Pl')),
            ],
            options={
                'db_table': 'Est_Print',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EstPunching',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('quoteid', models.IntegerField(db_column='QuoteID')),
                ('pn_type', models.CharField(blank=True, db_column='PN_Type', max_length=10, null=True)),
            ],
            options={
                'db_table': 'est_punching',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EstQty',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('quoteid', models.IntegerField(db_column='QuoteID')),
                ('qtyreq', models.IntegerField(blank=True, db_column='QtyReq', null=True)),
            ],
            options={
                'db_table': 'Est_Qty',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EstSorting',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('quoteid', models.IntegerField(db_column='QuoteID')),
                ('so_style', models.CharField(blank=True, db_column='SO_Style', max_length=10, null=True)),
            ],
            options={
                'db_table': 'est_sorting',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EstWindowPatching',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('quoteid', models.IntegerField(db_column='QuoteID')),
                ('wp_film', models.CharField(blank=True, db_column='WP_Film', max_length=10, null=True)),
                ('wp_l', models.FloatField(db_column='WP_L')),
                ('wp_b', models.FloatField(db_column='WP_B')),
            ],
            options={
                'db_table': 'est_window_patching',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PapergridQtyP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inc', models.FloatField(db_column='Inc')),
                ('dackle_dim', models.FloatField(db_column='Dackle_Dim')),
                ('grain_dim', models.FloatField(db_column='Grain_Dim')),
                ('ups', models.IntegerField(db_column='Ups')),
                ('areapercarton_sqinch', models.FloatField(db_column='AreaPerCarton_SqInch')),
                ('scan', models.IntegerField(db_column='Scan')),
                ('grain', models.CharField(db_column='Grain', max_length=10)),
                ('machineid', models.CharField(db_column='MachineID', max_length=10)),
                ('machinename', models.CharField(db_column='MachineName', max_length=60)),
                ('noofpass_req', models.IntegerField(db_column='NoOfPass_req')),
                ('mat_x', models.IntegerField(db_column='Mat_X')),
                ('mat_y', models.IntegerField(db_column='Mat_Y')),
                ('dielength_in_inch', models.FloatField(blank=True, db_column='DieLength_In_Inch', null=True)),
                ('qty', models.FloatField(db_column='Qty')),
                ('f_color', models.IntegerField(db_column='F_Color')),
                ('b_color', models.IntegerField(db_column='B_Color')),
                ('die_planheight', models.FloatField(db_column='Die_PlanHeight')),
                ('die_planwidth', models.FloatField(db_column='Die_PlanWidth')),
                ('fullsheet_d', models.FloatField(db_column='FullSheet_D')),
                ('fullsheet_g', models.FloatField(db_column='FullSheet_G')),
                ('fullsheet_grain', models.CharField(db_column='FullSheet_Grain', max_length=10)),
                ('fullsheet_cut_x', models.IntegerField(db_column='FullSheet_Cut_X')),
                ('fullsheet_cut_y', models.IntegerField(db_column='FullSheet_Cut_Y')),
                ('fullsheet_ups', models.IntegerField(db_column='FullSheet_Ups')),
                ('sheets_a', models.FloatField(db_column='Sheets_A')),
                ('heightcut', models.IntegerField(db_column='HeightCut')),
                ('widthcut', models.IntegerField(db_column='WidthCut')),
                ('lengthremaining', models.FloatField(db_column='LengthRemaining')),
                ('widthremaining', models.FloatField(db_column='WidthRemaining')),
                ('itemsinfirstcut', models.IntegerField(db_column='ItemsInFirstCut')),
                ('totalcuts', models.IntegerField(db_column='TotalCuts')),
                ('totalbox', models.IntegerField(db_column='TotalBox')),
                ('dackle_dim_b', models.FloatField(db_column='Dackle_Dim_B')),
                ('grain_dim_b', models.FloatField(db_column='Grain_Dim_B')),
                ('ups_b', models.IntegerField(db_column='Ups_B')),
                ('mat_x_b', models.IntegerField(db_column='Mat_X_B')),
                ('mat_y_b', models.IntegerField(db_column='Mat_Y_B')),
                ('cuts_b', models.IntegerField(db_column='Cuts_B')),
                ('sheets_b', models.FloatField(db_column='Sheets_B')),
                ('dackle_dim_c', models.FloatField(db_column='Dackle_Dim_C')),
                ('grain_dim_c', models.FloatField(db_column='Grain_Dim_C')),
                ('ups_c', models.IntegerField(db_column='Ups_C')),
                ('mat_x_c', models.IntegerField(db_column='Mat_X_C')),
                ('mat_y_c', models.IntegerField(db_column='Mat_Y_C')),
                ('cuts_c', models.IntegerField(db_column='Cuts_C')),
                ('sheets_c', models.FloatField(db_column='Sheets_C')),
                ('dackle_dim_d', models.FloatField(db_column='Dackle_Dim_D')),
                ('grain_dim_d', models.FloatField(db_column='Grain_Dim_D')),
                ('ups_d', models.IntegerField(db_column='Ups_D')),
                ('mat_x_d', models.IntegerField(db_column='Mat_X_D')),
                ('mat_y_d', models.IntegerField(db_column='Mat_Y_D')),
                ('cuts_d', models.IntegerField(db_column='Cuts_D')),
                ('sheets_d', models.FloatField(db_column='Sheets_D')),
                ('dackle_dim_tot', models.FloatField(db_column='Dackle_Dim_Tot')),
                ('grain_dim_tot', models.FloatField(db_column='Grain_Dim_Tot')),
                ('wastage_x', models.FloatField(db_column='Wastage_X')),
                ('wastage_y', models.FloatField(db_column='Wastage_Y')),
                ('wastage_weight_kg_a', models.FloatField(db_column='Wastage_Weight_kg_A')),
                ('wastage_weight_kg_b', models.FloatField(db_column='Wastage_Weight_kg_B')),
                ('wastage_weight_kg', models.FloatField(db_column='Wastage_Weight_kg')),
                ('utilizationper', models.FloatField(db_column='UtilizationPer')),
                ('fullsheet_req', models.FloatField(db_column='FullSheet_Req')),
                ('paperid', models.CharField(db_column='PaperID', max_length=10)),
                ('gsm', models.IntegerField(db_column='Gsm')),
                ('paper_rate', models.FloatField(db_column='Paper_Rate')),
                ('paper_unit', models.CharField(db_column='Paper_Unit', max_length=10)),
                ('print_size_sheets', models.FloatField(db_column='Print_Size_Sheets')),
                ('print_impression', models.IntegerField(db_column='Print_Impression')),
                ('paper_kg', models.FloatField(db_column='Paper_Kg')),
                ('paper_kg_fullsheet', models.FloatField(db_column='Paper_Kg_FullSheet')),
                ('paper_amt', models.FloatField(db_column='Paper_Amt')),
                ('punchdie_amt', models.FloatField(db_column='PunchDie_Amt')),
                ('plate_amt', models.FloatField(db_column='Plate_Amt')),
                ('prmake_ready_amt', models.FloatField(db_column='PrMake_Ready_Amt')),
                ('printing_amt', models.FloatField(db_column='Printing_Amt')),
                ('total_amt', models.FloatField(db_column='Total_Amt')),
                ('pn_mcid', models.CharField(db_column='PN_McID', max_length=10)),
                ('pn_machinename', models.CharField(db_column='PN_MachineName', max_length=60)),
                ('pn_maxdackle', models.IntegerField(db_column='PN_MaxDackle')),
                ('pn_mindackle', models.IntegerField(db_column='PN_MinDackle')),
                ('pn_maxgrain', models.IntegerField(db_column='PN_MaxGrain')),
                ('pn_mingrain', models.IntegerField(db_column='PN_MinGrain')),
                ('pn_gripper', models.IntegerField(db_column='PN_Gripper')),
                ('pn_makerdy_amt', models.FloatField(blank=True, db_column='PN_MakeRdy_Amt', null=True)),
                ('pn_punching_amt', models.FloatField(blank=True, db_column='PN_Punching_Amt', null=True)),
            ],
            options={
                'db_table': 'PaperGrid_Qty_P',
                'managed': False,
                'auto_created': False,
            },
        ),
    ]
